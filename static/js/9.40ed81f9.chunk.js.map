{"version":3,"file":"static/js/9.40ed81f9.chunk.js","mappings":"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","sources":["graphql/mutations/login.graphql.ts","modules/Login-Logout/components/Login.tsx","graphql/mutations/register.graphql.ts","modules/Login-Logout/components/Register.tsx","modules/Login-Logout/LoginRegister.tsx"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN = gql`\r\nmutation Login($username: String!, $password: String!){\r\n  login(username: $username, password: $password){\r\n    status\r\n    success\r\n    message\r\n    data{\r\n      username\r\n      password\r\n    }\r\n    accessToken\r\n  }\r\n}\r\n`;","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../sass/Login-Logout/Login-Logout.scss\";\r\nimport logo from \"../../../assets/images/logo.png\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN } from \"../../../graphql/mutations/login.graphql\";\r\nimport JWTManager from \"../../utils/jwt\"\r\nimport { useAuthContext } from \"../../context/AuthContext\";\r\n\r\nfunction Login() {\r\n \r\n  const navigate = useNavigate();\r\n  const {setIsAuthenticated} = useAuthContext() \r\n  const google = () => {\r\n    window.open(\"https://d9da-2001-ee0-5321-4c10-9969-874e-f83c-14a7.ap.ngrok.io/auth/google\", \"_self\")\r\n  }    \r\n      const [login, {data, loading, error}] = useMutation(LOGIN);\r\n      const [errorMessage, setErrorMessage] = useState('')\r\n\r\n      if (loading) return <p>loading....</p>;\r\n      if (error) return <p>error</p>;\r\n      const handleFinish = async (values: any) => {\r\n\r\n        const response = await login({\r\n          variables : {username: values.username, password: values.password}\r\n        })\r\n        \r\n        if (response.data?.login.success) {\r\n          JWTManager.setToken(response.data.login.accessToken as string)\r\n          setIsAuthenticated(true)\r\n          navigate('..')\r\n        } else {\r\n          if (response.data?.login.message) setErrorMessage(response.data.login.message)\r\n        }\r\n        \r\n        \r\n      }\r\n      \r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login--logo\">\r\n        <img src={logo} alt=\"logo-sen-shop\" />\r\n      </div>\r\n      {errorMessage && <p style={{color:\"red\", textAlign: \"center\", fontSize:\"20px\"}}>{errorMessage}</p>}\r\n      <div className=\"login--form\">\r\n        <Form\r\n          className=\"form--form\"\r\n          layout=\"vertical\"\r\n          wrapperCol={{span: 24}}\r\n          name=\"login\"\r\n          autoComplete=\"off\"\r\n          onFinish={handleFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            label=\"Tên đăng nhập\"\r\n            rules={[{ required: true, message: \"Tên đăng nhập không được để trống!\" }]}\r\n          >\r\n            <Input className=\"input--css\"/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"Mật Khẩu\"\r\n            rules={[\r\n              { \r\n                required: true, \r\n                message: \"Mật khẩu không được bỏ trống!\" },\r\n              { \r\n                min: 8, message: \"Độ dài từ 8 kí tự\"\r\n              }\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Nhớ mật khẩu</Checkbox>\r\n          </Form.Item>\r\n          <Form.Item name=\"submit\">\r\n            <Button \r\n              type=\"primary\" \r\n              htmlType=\"submit\"\r\n            >\r\n              Đăng nhập\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      <div className=\"logout-another\">\r\n                <p\r\n                    style={{marginLeft: \"240px\",  fontSize: \"20px\"}}\r\n                >\r\n                    Hoặc\r\n                </p>\r\n                <div className=\"facebook-google\">\r\n                    <Button\r\n                        className=\"facebook-google--css\"\r\n                    >\r\n                      <a href=\"https://ebe9-2001-ee0-5321-4c10-ed8c-8b48-54bc-9568.ap.ngrok.io/auth/facebook\">\r\n\r\n                        Facebook\r\n                      </a>\r\n                    </Button>\r\n                    <Button\r\n                        className=\"facebook-google--css\"\r\n                        onClick={google}\r\n                    >\r\n                        Google\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n      <div className=\"login--text\">\r\n        <p>\r\n          Bạn chưa có tài khoản?\r\n          <span>\r\n            <a>Đăng ký</a>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const REGISTER = gql`\r\nmutation Register($username: String!, $password: String!, $email: String!){\r\n  register(username: $username, password: $password, email: $email){\r\n    data{\r\n      username\r\n      password\r\n    }\r\n    status\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\n","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport logo from \"../../../assets/images/logo.png\";\r\nimport \"../../../sass/Login-Logout/Login-Logout.scss\";\r\nimport { Form, Input, Button, Typography } from \"antd\";\r\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {REGISTER} from \"../../../graphql/mutations/register.graphql\"\r\n\r\n\r\nfunction Register(){\r\n    \r\n      const navigate = useNavigate()      \r\n      const [register, {data, loading, error}] = useMutation(REGISTER);\r\n      const [errorMessage, setErrorMessage] = useState(\"\")\r\n      if (loading) return <p>loading....</p>;\r\n      if (error) return <p>error</p>;\r\n      const handleFinish = async (values: any) => {\r\n        const response = await register({variables : {username: values.username, password: values.password, email: values.email}});\r\n        if(response.data?.register.success) {\r\n          navigate('..');\r\n        }else {\r\n          if (response.data?.register.message) setErrorMessage(response.data.register.message)\r\n        }\r\n      }\r\n      \r\n    return(\r\n        <div className=\"Logout\">\r\n            <div className=\"Logout--logo\">\r\n              <img \r\n                src={logo}\r\n                alt=\"logo-sen-shop\" \r\n              />\r\n            </div>\r\n            {errorMessage && <p style={{color:\"red\", textAlign: \"center\", fontSize:\"20px\"}} >{errorMessage}</p>}\r\n            <div className=\"Logout--form\">\r\n              <Form\r\n                onFinish={handleFinish}\r\n                className=\"form--form\"\r\n                layout=\"vertical\"\r\n                wrapperCol={{span: 24}}\r\n                name=\"register\"\r\n                autoComplete=\"off\"\r\n                \r\n              >\r\n                <Form.Item\r\n                  name=\"username\"\r\n                  rules={[{ required: true, message: \"Tên không được để trống!\" }]}\r\n                  label=\"Tên đăng nhập\"\r\n                >\r\n                  <Input className=\"input--css\"/>\r\n                  \r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    { \r\n                      required: true, \r\n                      message: 'Password không được bỏ trống!'\r\n                    },{ \r\n                      min : 8, message: \"Độ dài từ 8 kí tự\" \r\n                    }]}\r\n                  hasFeedback\r\n                  label=\"Mật khẩu\"\r\n                >\r\n                  \r\n                  <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"Confirm Password\"\r\n                  label=\"Nhập lại mật khẩu\"\r\n                  rules={[\r\n                    { \r\n                      required: true, \r\n                      message: \"Vui lòng xác nhận mật khẩu!\" \r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(new Error('Xác nhận mật khẩu không chính xác!'));\r\n                      },\r\n                    }), \r\n                    { \r\n                      min : 8, message: \"Độ dài từ 8 kí tự\" \r\n                    } \r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  \r\n                  <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[{ required: true, message: \"Email không được bỏ trống!\"}, {type:\"email\", message: \"Email phải đúng định dạng!\"}]}\r\n                  label=\"Email\"\r\n                >\r\n                  <Input className=\"input--css\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button \r\n                    type=\"primary\" \r\n                    htmlType=\"submit\"\r\n                    style={{marginTop: \"30px\"}}\r\n                  >\r\n                    Đăng ký\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n            <div className=\"logout-another\">\r\n                <p\r\n                    style={{marginLeft: \"240px\",  fontSize: \"20px\"}}\r\n                >\r\n                    Hoặc\r\n                </p>\r\n                <div className=\"facebook-google\">\r\n                    <Button\r\n                        className=\"facebook-google--css\"\r\n                    >\r\n                        <a href=\"https://ebe9-2001-ee0-5321-4c10-ed8c-8b48-54bc-9568.ap.ngrok.io/auth/facebook\">\r\n\r\n                          Facebook\r\n                        </a>\r\n                    </Button>\r\n                    <Button\r\n                        className=\"facebook-google--css\"\r\n                    >\r\n                        Google\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"Logout--text\"\r\n                style={{marginTop: \"20px\"}}\r\n            >\r\n              <p>Bạn đã có tài khoản?<span><a>Đăng nhập</a></span></p> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import { useState, useEffect, useRef } from \"react\";\r\nimport React from \"react\";\r\nimport \"../../sass/Login-Logout/Login-Logout.scss\";\r\nimport { Form, Input, Button, Typography } from \"antd\";\r\nimport { Login, Register } from \"./components\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction LoginRegister() {\r\n  const [clickChange, setClickChange] = useState<boolean>(true);\r\n\r\n  let className = \"active\";\r\n  let idLogin = document.getElementById(\"loginRef\");\r\n  let idRegister = document.getElementById(\"registerRef\");\r\n\r\n  if (clickChange === true) {\r\n    idLogin?.classList.add(className);\r\n    idRegister?.classList.remove(className);\r\n  } else {\r\n    idRegister?.classList.add(className);\r\n    idLogin?.classList.remove(className);\r\n  }\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Đăng nhập, đăng ký tài khoản website sen shop</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Để có thể sử dụng tốt hơn bạn có thể đăng ký hoặc đăng nhập tài khoản vào website. Khi đó bạn có thể đánh giá các sản phẩm, phản hồi những ý tưởng thông tin hữu ích cho chúng tôi.\"\r\n        />\r\n        <link rel=\"canonical\" href=\"https://senshop.tech/login\" />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta\r\n          property=\"og:title\"\r\n          content=\"Đăng nhập, đăng ký tài khoản website sen shop\"\r\n        />\r\n        <meta property=\"og:url\" content=\"https://senshop.tech/login\" />\r\n        <meta\r\n          property=\"og:image\"\r\n          content=\"https://cdn.senshop.tech/Blog/SenShop.jpg\"\r\n        />\r\n        <meta\r\n          property=\"og:description\"\r\n          content=\"Để có thể sử dụng tốt hơn bạn có thể đăng ký hoặc đăng nhập tài khoản vào website. Khi đó bạn có thể đánh giá các sản phẩm, phản hồi những ý tưởng thông tin hữu ích cho chúng tôi.\"\r\n        />\r\n      </Helmet>\r\n      <div className=\"login-logout__wrapper\">\r\n        <div\r\n          className=\"login-logout--login active\"\r\n          id=\"loginRef\"\r\n          onClick={() => setClickChange(true)}\r\n        >\r\n          Đăng nhập\r\n        </div>\r\n\r\n        <div\r\n          className=\"login-logout--logout\"\r\n          id=\"registerRef\"\r\n          onClick={() => setClickChange(false)}\r\n        >\r\n          Đăng ký\r\n        </div>\r\n      </div>\r\n      {clickChange === true ? <Login /> : <Register />}\r\n    </>\r\n  );\r\n}\r\nexport default LoginRegister;\r\n"],"names":["LOGIN","gql","navigate","useNavigate","setIsAuthenticated","useAuthContext","useMutation","login","loading","data","error","useState","errorMessage","setErrorMessage","handleFinish","values","variables","username","password","response","success","JWTManager","accessToken","message","className","src","logo","alt","style","color","textAlign","fontSize","layout","wrapperCol","span","name","autoComplete","onFinish","label","rules","required","min","hasFeedback","valuePropName","noStyle","type","htmlType","marginLeft","href","onClick","window","open","REGISTER","register","email","getFieldValue","validator","_","value","Promise","reject","Error","resolve","marginTop","clickChange","setClickChange","idLogin","document","getElementById","idRegister","classList","add","remove","Helmet","content","rel","property","id"],"sourceRoot":""}